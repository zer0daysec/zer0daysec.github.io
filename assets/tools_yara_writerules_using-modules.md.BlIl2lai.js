import{_ as s,c as e,a3 as t,o}from"./chunks/framework.DtMx7FFi.js";const m=JSON.parse('{"title":"使用模块","description":"","frontmatter":{"layout":"doc","title":"使用模块"},"headers":[],"relativePath":"tools/yara/writerules/using-modules.md","filePath":"tools/yara/writerules/using-modules.md"}'),p={name:"tools/yara/writerules/using-modules.md"};function i(n,a,l,c,r,d){return o(),e("div",null,a[0]||(a[0]=[t(`<div class="title-wrapper"><div class="page-title">使用模块</div><div class="post-title">—— yara 使用手册 · 编写 yara 规则 <span class="lastModifyTime"><i class="fa-regular fa-clock"></i> 最后更新： 2023-03-15 17:11:18 </span></div></div><p>模块是 Yara 核心功能的扩展，一些模块 (例如 PE 模块和 Cuckoo 模块) 是随 Yara 正式发布的，其他模块可以由第三方甚至你自己创建。</p><p>使用模块的第一步是使用 <code>import</code> 语句导入它，这些语句必须放在任何规则定义之外，并后跟用双引号引起来的模块名称。像这样：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import &quot;pe&quot;</span></span>
<span class="line"><span>import &quot;cuckoo&quot;</span></span></code></pre></div><p>导入模块后，可以使用其功能，始终使用 <code>&lt;module name&gt;.</code> 作为模块导出的任何变量或函数的前缀。例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pe.entry_point == 0x1000</span></span>
<span class="line"><span>cuckoo.http_request(/someregexp/)</span></span></code></pre></div>`,6)]))}const g=s(p,[["render",i]]);export{m as __pageData,g as default};
